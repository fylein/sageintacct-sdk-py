name: Secrets Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master]

  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [master]
  push:
    branches: [master]

jobs:
  # Internal PRs from the same repo

  pr-internal:
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE_KEY }}
          GITLEAKS_NOTIFY_USER_LIST: ${{ vars.GITLEAKS_NOTIFY_USER_LIST }}
          GITLEAKS_ENABLE_COMMENTS: 'true'
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: 'false'

  # External PRs from forks
  pr-external:
    if: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      # Trusted workflow from base repo
      - name: Checkout base repo (trusted)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          fetch-depth: 0

      # Fetch the PR head into ./pr. Treat as data only
      - name: Fetch PR head into ./pr
        run: |
          git fetch origin "pull/${{ github.event.number }}/head:pr"
          git worktree add ./pr pr

      - name: Run Gitleaks on PR files
        uses: gitleaks/gitleaks-action@v2
        with:
          args: --no-git -v --source="./pr"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE_KEY }}
          GITLEAKS_NOTIFY_USER_LIST: ${{ vars.GITLEAKS_NOTIFY_USER_LIST }}
          GITLEAKS_ENABLE_COMMENTS: 'true'
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: 'false'

  # Push scans on merge branch
  push-scan:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE_KEY }}
          GITLEAKS_NOTIFY_USER_LIST: ${{ vars.GITLEAKS_NOTIFY_USER_LIST }}
          GITLEAKS_ENABLE_COMMENTS: 'false' # usually no PR to comment on
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: 'true'